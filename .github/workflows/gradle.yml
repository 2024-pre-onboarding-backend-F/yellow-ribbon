name: JAVA CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Create application-secret.yml
      run: |
        mkdir -p ./src/main/resources
        echo "${{ secrets.APPLICATION_SECRET }}" > ./src/main/resources/application-secret.yml

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker image
      run: |
        COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7 | tr '[:upper:]' '[:lower:]' | tr -dc 'a-z0-9')
        echo "Commit SHA: $COMMIT_SHA"

        docker build -t ${{ secrets.DOCKER_USERNAME }}/yellow-ribbon:$COMMIT_SHA .
        
        docker push ${{ secrets.DOCKER_USERNAME }}/yellow-ribbon:$COMMIT_SHA
        
        docker tag ${{ secrets.DOCKER_USERNAME }}/yellow-ribbon:$COMMIT_SHA ${{ secrets.DOCKER_USERNAME }}/yellow-ribbon:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/yellow-ribbon:latest

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          echo "GITHUB_SHA: $GITHUB_SHA"
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7 | tr '[:upper:]' '[:lower:]' | tr -dc 'a-z0-9')
          echo "COMMIT_SHA: $COMMIT_SHA"
          echo "서버에서 Docker 이미지를 가져오는 중..."
          if ! docker pull ${{ secrets.DOCKER_USERNAME }}/yellow-ribbon:latest; then
            echo "이미지 가져오기 실패"; exit 1;
          fi
          
          echo "기존 컨테이너 중지 중..."
          if docker ps -q --filter "name=yellow-ribbon" | grep -q .; then
            if ! docker stop yellow-ribbon; then
              echo "컨테이너 중지 실패"; exit 1;
            fi
            if ! docker rm yellow-ribbon; then
              echo "컨테이너 제거 실패"; exit 1;
            fi
          fi
          
          echo "새 컨테이너 실행 중..."
          if ! docker run -d --name yellow-ribbon --log-driver=syslog -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/yellow-ribbon:latest; then
            echo "컨테이너 시작 실패"; exit 1;
          fi
          
          echo "사용하지 않는 이미지 정리 중..."
          if ! docker image prune -a -f; then
            echo "이미지 정리 실패"; exit 1;
          fi
