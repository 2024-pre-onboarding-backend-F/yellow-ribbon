buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.9'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'wanted'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //PostGreSQL driver add
    //runtimeOnly 'org.postgresql:postgresql'
    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // JsonObject
    implementation 'com.googlecode.json-simple:json-simple:1.1'
    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // XML 문서와 Java 객체 간 매핑 자동화
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    // spring-batch-core 최신버전 추가
    implementation 'org.springframework.batch:spring-batch-core:5.1.0'
    // Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // mac netty 설정
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'
    // QueryDSL - 4개
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Hibernate Spatial 의존성 (JPA와 함께 공간 데이터를 다루기 위해)
    implementation 'org.hibernate.orm:hibernate-spatial:6.2.9.Final' // Spring Boot 3.2.9는 Hibernate 6.2.x를 사용하기 때문에 버전을 맞춰서 사용해야함
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework:spring-webflux'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor('org.projectlombok:lombok')
}

/*tasks.named('test') {
    useJUnitPlatform()
}*/

/** QueryDSL start **/

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

/** QueryDSL end **/
